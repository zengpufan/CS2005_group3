{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'Register',\n  data() {\n    var checkUser = (rule, value, callback) => {\n      const regUser = /^[a-zA-Z0-9_-]{3,16}$/;\n      if (regUser.test(value)) {\n        return callback();\n      }\n      callback(new Error('用户名不能为空'));\n    };\n    var checkMobile = (rule, value, callback) => {\n      const regUser = /^((0\\d{2,3}-\\d{7,8})|(1[34578]\\d{9}))$/;\n      if (regUser.test(value)) {\n        return callback();\n      }\n      callback(new Error('手机号码不能为空'));\n    };\n    var checkEmail = (rule, value, callback) => {\n      const regUser = /^([a-zA-Z0-9]+[-_]?)+@[a-zA-Z0-9]+\\.[a-z]+$/;\n      if (regUser.test(value)) {\n        return callback();\n      }\n      callback(new Error('邮箱不能为空'));\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        user: '',\n        mobile: '',\n        email: '',\n        pass: '',\n        checkPass: ''\n      },\n      rules: {\n        user: [{\n          validator: checkUser,\n          trigger: 'blur'\n        }],\n        mobile: [{\n          validator: checkMobile,\n          trigger: 'blur'\n        }],\n        email: [{\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    returnForm() {\n      // 返回login界面\n      this.$router.push('/login');\n    },\n    submitForm() {\n      console.log(this.item);\n      var data = this.item;\n      this.$http.post('/api/login', data).then(response => {\n        console.log(response.body);\n        alert('注册成功！');\n        this.$router.push('/login');\n      }, response => {\n        console.log(response);\n        alert('出问题啦！！！');\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","checkUser","rule","value","callback","regUser","test","Error","checkMobile","checkEmail","validatePass","ruleForm","checkPass","$refs","validateField","validatePass2","pass","user","mobile","email","rules","validator","trigger","methods","returnForm","$router","push","submitForm","console","log","item","$http","post","then","response","body","alert"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n    <div class=\"box\">\r\n        <div class=\"zhuce\">\r\n            <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n                <el-form-item label=\"用户名\" prop=\"user\">\r\n                    <el-input v-model=\"ruleForm.user\" clearable></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"手机号码\" prop=\"mobile\">\r\n                    <el-input v-model=\"ruleForm.mobile\" clearable></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"电子邮箱\" prop=\"email\">\r\n                    <el-input v-model=\"ruleForm.email\" clearable></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"账号密码\" prop=\"pass\">\r\n                    <el-input type=\"password\" v-model=\"ruleForm.pass\" clearable></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n                    <el-input type=\"password\" v-model=\"ruleForm.checkPass\" clearable></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"submitForm('ruleForm2')\">注册</el-button>\r\n                    <el-button @click=\"returnForm\">取消</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    // eslint-disable-next-line vue/multi-word-component-names\r\n    name:'Register',\r\n    data() {\r\n        var checkUser = (rule, value, callback) => {\r\n            const regUser = /^[a-zA-Z0-9_-]{3,16}$/\r\n            if (regUser.test(value)) {\r\n                return callback()\r\n            }\r\n            callback(new Error('用户名不能为空'))\r\n        }\r\n        var checkMobile = (rule, value, callback) => {\r\n            const regUser = /^((0\\d{2,3}-\\d{7,8})|(1[34578]\\d{9}))$/\r\n            if (regUser.test(value)) {\r\n                return callback()\r\n            }\r\n            callback(new Error('手机号码不能为空'))\r\n        }\r\n        var checkEmail = (rule, value, callback) => {\r\n            const regUser = /^([a-zA-Z0-9]+[-_]?)+@[a-zA-Z0-9]+\\.[a-z]+$/\r\n            if (regUser.test(value)) {\r\n                return callback()\r\n            }\r\n            callback(new Error('邮箱不能为空'))\r\n        }\r\n        var validatePass = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入密码'))\r\n            } else {\r\n                if (this.ruleForm.checkPass !== '') {\r\n                    this.$refs.ruleForm.validateField('checkPass')\r\n                }\r\n                callback()\r\n            }\r\n        }\r\n        var validatePass2 = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请再次输入密码'))\r\n            } else if (value !== this.ruleForm.pass) {\r\n                callback(new Error('两次输入密码不一致!'))\r\n            } else {\r\n                callback()\r\n            }\r\n        }\r\n        return {\r\n            ruleForm: {\r\n                user: '',\r\n                mobile: '',\r\n                email: '',\r\n                pass: '',\r\n                checkPass: ''\r\n            },\r\n            rules: {\r\n                user: [{ validator: checkUser, trigger: 'blur' }],\r\n                mobile: [{ validator: checkMobile, trigger: 'blur' }],\r\n                email: [{ validator: checkEmail, trigger: 'blur' }],\r\n                pass: [{ validator: validatePass, trigger: 'blur' }],\r\n                checkPass: [{ validator: validatePass2, trigger: 'blur' }]\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        returnForm() {\r\n            // 返回login界面\r\n            this.$router.push('/login')\r\n        },\r\n        submitForm() {\r\n            console.log(this.item)\r\n            var data = this.item\r\n            this.$http.post('/api/login', data).then(\r\n                (response) => {\r\n                    console.log(response.body)\r\n                    alert('注册成功！')\r\n                    this.$router.push('/login')\r\n                },\r\n                (response) => {\r\n                    console.log(response)\r\n                    alert('出问题啦！！！')\r\n                }\r\n            )\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.box {\r\n    height: 100%;\r\n    background-color: #2e4e6e;\r\n}\r\n.zhuce {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 450px;\r\n    height: 450px;\r\n    background-color: #fff;\r\n    border-radius: 3px;\r\n}\r\n.el-form-item {\r\n    margin-top: 30px;\r\n    width: 400px;\r\n}\r\n</style>\r\n\r\n"],"mappings":";AA6BA;EACA;EACAA,IAAA;EACAC,KAAA;IACA,IAAAC,SAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,MAAAC,OAAA;MACA,IAAAA,OAAA,CAAAC,IAAA,CAAAH,KAAA;QACA,OAAAC,QAAA;MACA;MACAA,QAAA,KAAAG,KAAA;IACA;IACA,IAAAC,WAAA,GAAAA,CAAAN,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,MAAAC,OAAA;MACA,IAAAA,OAAA,CAAAC,IAAA,CAAAH,KAAA;QACA,OAAAC,QAAA;MACA;MACAA,QAAA,KAAAG,KAAA;IACA;IACA,IAAAE,UAAA,GAAAA,CAAAP,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,MAAAC,OAAA;MACA,IAAAA,OAAA,CAAAC,IAAA,CAAAH,KAAA;QACA,OAAAC,QAAA;MACA;MACAA,QAAA,KAAAG,KAAA;IACA;IACA,IAAAG,YAAA,GAAAA,CAAAR,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAG,KAAA;MACA;QACA,SAAAI,QAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,QAAA,CAAAG,aAAA;QACA;QACAV,QAAA;MACA;IACA;IACA,IAAAW,aAAA,GAAAA,CAAAb,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAG,KAAA;MACA,WAAAJ,KAAA,UAAAQ,QAAA,CAAAK,IAAA;QACAZ,QAAA,KAAAG,KAAA;MACA;QACAH,QAAA;MACA;IACA;IACA;MACAO,QAAA;QACAM,IAAA;QACAC,MAAA;QACAC,KAAA;QACAH,IAAA;QACAJ,SAAA;MACA;MACAQ,KAAA;QACAH,IAAA;UAAAI,SAAA,EAAApB,SAAA;UAAAqB,OAAA;QAAA;QACAJ,MAAA;UAAAG,SAAA,EAAAb,WAAA;UAAAc,OAAA;QAAA;QACAH,KAAA;UAAAE,SAAA,EAAAZ,UAAA;UAAAa,OAAA;QAAA;QACAN,IAAA;UAAAK,SAAA,EAAAX,YAAA;UAAAY,OAAA;QAAA;QACAV,SAAA;UAAAS,SAAA,EAAAN,aAAA;UAAAO,OAAA;QAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,WAAA;MACA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAC,WAAA;MACAC,OAAA,CAAAC,GAAA,MAAAC,IAAA;MACA,IAAA9B,IAAA,QAAA8B,IAAA;MACA,KAAAC,KAAA,CAAAC,IAAA,eAAAhC,IAAA,EAAAiC,IAAA,CACAC,QAAA;QACAN,OAAA,CAAAC,GAAA,CAAAK,QAAA,CAAAC,IAAA;QACAC,KAAA;QACA,KAAAX,OAAA,CAAAC,IAAA;MACA,GACAQ,QAAA;QACAN,OAAA,CAAAC,GAAA,CAAAK,QAAA;QACAE,KAAA;MACA,EACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}